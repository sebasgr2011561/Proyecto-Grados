// <auto-generated />
using System;
using Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(EDucaTdaContext))]
    [Migration("20240405020248_Initial-migration")]
    partial class Initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAsignacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstudiante");

                    b.HasIndex("IdRecurso");

                    b.ToTable("Asignacion", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Calificacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRecurso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRecurso");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Calificaciones", t =>
                        {
                            t.Property("IdRecurso")
                                .HasColumnName("IdRecurso1");
                        });
                });

            modelBuilder.Entity("Domain.Entities.Categorium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombreCategoria");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Domain.Entities.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Permiso1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Permiso");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Domain.Entities.Recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRecurso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesor")
                        .HasColumnType("int");

                    b.Property<string>("ImagenPortada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRecurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProfesor");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Domain.Entities.Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRuta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasMaxLength(10)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstudiante");

                    b.HasIndex("IdRecurso");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.Asignacion", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Asignacions")
                        .HasForeignKey("IdEstudiante")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Usuarios");

                    b.HasOne("Domain.Entities.Recurso", "IdRecursoNavigation")
                        .WithMany("Asignacions")
                        .HasForeignKey("IdRecurso")
                        .IsRequired()
                        .HasConstraintName("FK_Asignacion_Recursos");

                    b.Navigation("IdEstudianteNavigation");

                    b.Navigation("IdRecursoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Calificacione", b =>
                {
                    b.HasOne("Domain.Entities.Recurso", "IdRecursoNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdRecurso")
                        .IsRequired()
                        .HasConstraintName("FK_Calificaciones_Recursos");

                    b.HasOne("Domain.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Calificaciones_Usuarios");

                    b.Navigation("IdRecursoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Permiso", b =>
                {
                    b.HasOne("Domain.Entities.Role", "IdRolNavigation")
                        .WithMany("Permisos")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK_Permisos_Roles");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Recurso", b =>
                {
                    b.HasOne("Domain.Entities.Categorium", "IdCategoriaNavigation")
                        .WithMany("Recursos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Recursos_Categoria");

                    b.HasOne("Domain.Entities.Usuario", "IdProfesorNavigation")
                        .WithMany("Recursos")
                        .HasForeignKey("IdProfesor")
                        .IsRequired()
                        .HasConstraintName("FK_Recursos_Usuarios");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdProfesorNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Ruta", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "IdEstudianteNavigation")
                        .WithMany("Ruta")
                        .HasForeignKey("IdEstudiante")
                        .IsRequired()
                        .HasConstraintName("FK_Rutas_Usuarios");

                    b.HasOne("Domain.Entities.Recurso", "IdRecursoNavigation")
                        .WithMany("Ruta")
                        .HasForeignKey("IdRecurso")
                        .IsRequired()
                        .HasConstraintName("FK_Rutas_Recursos");

                    b.Navigation("IdEstudianteNavigation");

                    b.Navigation("IdRecursoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Domain.Entities.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_Roles");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Categorium", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("Domain.Entities.Recurso", b =>
                {
                    b.Navigation("Asignacions");

                    b.Navigation("Calificaciones");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Permisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Asignacions");

                    b.Navigation("Calificaciones");

                    b.Navigation("Recursos");

                    b.Navigation("Ruta");
                });
#pragma warning restore 612, 618
        }
    }
}
